<apex:page controller="sales_Accounts_Detail" title="Sales Cockpit - Account Summary: {!Acct.Name}" readOnly="true" cache="false">
    <head>
        <apex:includeScript value="{!URLFOR($Resource.bootstrap3, 'bootstrap/js/bootstrap.min.js')}"/>
        <apex:stylesheet value="{!URLFOR($Resource.bootstrap3, 'bootstrap/css/bootstrap.css')}"/>
        
        <apex:includeScript value="{!UrlFor($Resource.jQuery1113,'jquery-1.11.3.min.js')}"/>
        <apex:includeScript value="{!UrlFor($Resource.jQuery1113,'jquery-ui.min.js')}"/>
        <apex:stylesheet value="{!UrlFor($Resource.jQuery1113,'jquery-ui.min.css')}"/>
        
        <apex:stylesheet value="{!UrlFor($Resource.tablesorter,'/tablesorter-master/dist/css/theme.bootstrap.min.css')}"/>
        <apex:includeScript value="{!UrlFor($Resource.tablesorter ,'/tablesorter-master/dist/js/jquery.tablesorter.min.js')}"/>
        <apex:includeScript value="{!UrlFor($Resource.tablesorter ,'/tablesorter-master/dist/js/jquery.tablesorter.widgets.min.js')}"/>
        
        <apex:includeScript value="{!UrlFor($Resource.jQuery_Table_Exporter,'/tableExport/libs/FileSaver/FileSaver.min.js')}"/>
        <apex:includeScript value="{!UrlFor($Resource.jQuery_Table_Exporter,'/tableExport/tableExport.min.js')}"/>
        
        <style>
            #tfx th{
            text-align: center;
            vertical-align: center;
            vertical-align: bottom;
            }
            
            #tfx td{
            text-align: center;
            vertical-align: center;
            vertical-align: middle;
            }
            
            #ytd td{
            text-align: center;
            vertical-align: center;
            vertical-align: middle;
            }
            #ytd th{
            <!-- background-color:#00205b; 
            color:#FFF;-->
            font-weight: bold;
            text-align: center;
            }
            
            .c {
            text-align: center;
            }
            .r {
            text-align: right;
            }
            .text-nowrap {
            white-space:nowrap;
            overflow:hidden;
            }
            .well {
            background: #00205b !important;
            color:#FFF;
            text-align: center;
            }
        </style>
    </head>
    <div class="teleflex">
        <div class="panel panel-info">
            <div class="panel-heading text-left">
                <h3 class="panel-title">Home / Surgical Disposables / <a href="/apex/sales_Accounts?id={!tnumber}">{!tnumber}</a> / {!acct.Name} ({!acct.SAP_Code__c})</h3>
            </div>
        </div>
        <div class="row" style="padding-left: 15px;padding-right: 15px;"> 
            <div style="padding-bottom: 5px;padding-top: 5px;" class="alert alert-info text-left col-md-9">
                <strong><h4><span class="glyphicon glyphicon-list"></span>&nbsp;Invoiced Order Details:</h4></strong><br/>Territory: <strong><a href="/apex/sales_Accounts?id={!tnumber}">{!tnumber}</a></strong>
                <apex:outputText rendered="{!acct.Name != NULL}"><br/>Customer: <strong>{!acct.Name} ({!acct.SAP_Code__c})</strong></apex:outputText>
                <apex:outputText rendered="{!recentOrders}"> - <a href="Recent_Sales_Orders?id={!tid}&aid={!acct.Id}"><strong>Recent Orders ({!roMap[acct.Id]})</strong></a></apex:outputText>
                <apex:outputText rendered="{!openOrders}"> - <a href="open_Orders?id={!tid}&aid={!acct.Id}"><strong>Open Orders ({!ooMap[acct.Id]})</strong></a></apex:outputText>
            </div>
            <div style="padding-bottom: 5px;padding-top: 5px;" class="alert alert-danger col-md-3">
                <strong><h4><span class="glyphicon glyphicon-alert"></span>&nbsp;Beta Functionality</h4><br/>No guarantees this data is accurate.</strong><br/>&nbsp;
            </div> 
        </div>
        <table style="padding:0px;">
            <tr>
                <td class="tfix" style="padding-bottom: 12px;padding-top: 0px;">
                    <apex:outputLink Styleclass="btn btn-primary btn-sm" rendered="{!tid != NULL}" value="sales_Accounts?id={!tnumber}"><span class="glyphicon glyphicon-home"></span>&nbsp;Home</apex:outputLink>
                    <apex:outputLink Styleclass="btn btn-primary btn-sm" rendered="{!tid != NULL}" value="Recent_Sales_Orders?id={!tid}"><span class="glyphicon glyphicon-barcode"></span>&nbsp;Recent Orders: {!tnumber}</apex:outputLink>
                    <apex:outputLink Styleclass="btn btn-primary btn-sm" rendered="{!tid != NULL}" value="open_Orders?id={!tid}"><span class="glyphicon glyphicon-plane"></span>&nbsp;Open Orders: {!tnumber}</apex:outputLink> 
                    <apex:outputLink onclick="$('[id$=tfx]').tableExport({type:'excel', fileName: 'Account-Details-{!acct.SAP_Code__c}', excelstyles:['border-bottom', 'border-top', 'border-left', 'border-right']});return false;" Styleclass="btn btn-primary btn-sm"><span class="glyphicon glyphicon-floppy-disk"></span>&nbsp;Download Excel</apex:outputLink>
                </td>
            </tr>
        </table>
        <table class="table table-hover table-striped table-bordered table-condensed" id="tfx">
            <thead>
                <tr>
                    <th>Material</th>
                    <th>Description</th>
                    <th>Comp</th>
                    <th>Year</th>
                    <th>Total</th>
                    <th>Total #</th>
                    <apex:repeat value="{!mList}" var="m">
                        <th>{!monthMap[m]}</th>
                        <th>#</th>
                    </apex:repeat>
                </tr>
            </thead>
            <apex:variable value="{!1}" var="row"/>
            <tbody>
                <apex:repeat value="{!pList}" var="p">
                    <apex:repeat value="{!yList}" var="yr">
                        <tr>
                            <td class="text-nowrap">
                                <a href="/apex/PP_Material_Info?id={!prodMap[p].Id}">{!prodMap[p].Name}</a>                                                
                            </td>
                            <td>{!prodMap[p].Description}</td>
                            <td>{!compMap[p]}</td>
                            <td>{!yr}</td>
                            <td>
                                <apex:outputText rendered="{!salesMap[yr+p+'prodSalesTotal'] = 0}">-</apex:outputText>
                                <apex:outputText rendered="{!salesMap[yr+p+'prodSalesTotal'] != 0}">
                                    <apex:outputText styleClass="sorter-digit" value="{0, number, currency}">
                                        <apex:param value="{!salesMap[yr+p+'prodSalesTotal']}" />
                                    </apex:outputText>
                                    
                                </apex:outputText>
                                
                            </td>
                            <td>
                                <apex:outputText rendered="{!salesMap[yr+p+'prodSalesTotal'] = 0}">-</apex:outputText>
                                <apex:outputText rendered="{!salesMap[yr+p+'prodSalesTotal'] != 0}">
                                    {!round(qtyMap[yr+p+'prodQtyTotal'],0)}
                                </apex:outputText>
                            </td>
                            <apex:repeat value="{!mList}" var="m">
                                <td><center>
                                    <apex:outputText rendered="{!salesMap[yr+m+p] = 0}">-</apex:outputText>
                                    <apex:outputText rendered="{!salesMap[yr+m+p] != 0}">
                                        <apex:outputText styleClass="sorter-digit" value="{0, number, currency}">
                                            <apex:param value="{!salesMap[yr+m+p]}" />
                                        </apex:outputText>
                                        
                                    </apex:outputText>
                                    </center></td>
                                <td>
                                    <apex:outputText rendered="{!salesMap[yr+m+p] = 0}">-</apex:outputText>
                                    <apex:outputText rendered="{!salesMap[yr+m+p] != 0}">{!round(qtyMap[yr+m+p],0)}</apex:outputText>
                                </td>
                            </apex:repeat>
                        </tr>
                    </apex:repeat>
                    <apex:variable var="row" value="{!row + 1}"/>
                </apex:repeat>
            </tbody>
        </table>
    </div>
    <script>
    $(function(){
        
        $('table').tablesorter({
            theme: 'bootstrap',
            //showProcessing: true,
            widthFixed: true,
            headerTemplate : '{content} {icon}', // new in v2.7. Needed to add the bootstrap icon! - This is what sets the arrows.
            
            selectorHeaders: '> thead th, > thead td',
            // desc so that when sorting numbers it sorts the highest first.
            sortInitialOrder: "desc",
            // third click on the header will reset column to default - unsorted
            sortReset   : true,
            // Resets the sort direction so that clicking on an unsorted column will sort in the sortInitialOrder direction.
            sortRestart : true,
            sortInitialOrder: "desc",
            widgets: ['zebra', 'stickyHeaders', 'uitheme', 'filter'],
            
            widgetOptions: {
                
                // css class name applied to the sticky header row (tr)
                stickyHeaders : 'tablesorter-stickyHeader',
                // adding zebra striping, using content and default styles - the ui css removes the background from default
                // even and odd class names included for this demo to allow switching themes
                //zebra   : ["ui-widget-content even", "ui-state-default odd"],
                zebra : ["even", "odd"],
                // reset filters button
                filter_reset : ".reset",
                
                // extra css class name (string or array) added to the filter element (input or select)
                filter_cssFilter: "form-control",
                
                // reset filters button
                //filter_reset : ".reset",
                
                // change default uitheme icons - find the full list of icons here: http://jqueryui.com/themeroller/ (hover over them for their name)
                // default icons: ["ui-icon-arrowthick-2-n-s", "ui-icon-arrowthick-1-s", "ui-icon-arrowthick-1-n"]
                // ["up/down arrow (cssHeaders/unsorted)", "down arrow (cssDesc/descending)", "up arrow (cssAsc/ascending)" ]
                //uitheme : ["ui-icon-carat-2-n-s", "ui-icon-carat-1-s", "ui-icon-carat-1-n"]
                
                
            }
            
        });
        $.extend($.tablesorter.themes.bootstrap
                 // change default jQuery uitheme icons - find the full list of icons
                 // here: http://jqueryui.com/themeroller/ (hover over them for their name)
                 ,{table: 'ui-widget ui-widget-content ui-corner-all'        // table classes
                   ,header: 'ui-widget-header ui-corner-all ui-state-default' // header classes
                   ,icons: 'ui-icon'               // icon class added to the <i> in the header
                   ,sortNone: 'ui-icon-carat-2-n-s'
                   ,sortAsc: 'ui-icon-carat-1-n'
                   ,sortDesc: 'ui-icon-carat-1-s'
                   ,active: 'ui-state-active'       // applied when column is sorted
                   ,hover: 'ui-state-hover'         // hover class
                   ,filterRow: ''
                   ,even: 'ui-widget-content'       // even row zebra striping
                   ,odd: 'ui-state-default'         // odd row zebra striping
                  });
        
        
        
    });
    </script>
</apex:page>